"use strict"; Object.defineProperty(exports, "__esModule", { value: !0 }), exports.default = createLiveStore; var _react = require("react"), _redux = require("redux"); function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest() } function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } function _unsupportedIterableToArray(r, e) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, e); var t = Object.prototype.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, e) : void 0 } } function _arrayLikeToArray(r, e) { (null == e || e > r.length) && (e = r.length); for (var t = 0, n = new Array(e); t < e; t++)n[t] = r[t]; return n } function _iterableToArrayLimit(r, e) { if ("undefined" != typeof Symbol && Symbol.iterator in Object(r)) { var t = [], n = !0, a = !1, o = void 0; try { for (var i, u = r[Symbol.iterator](); !(n = (i = u.next()).done) && (t.push(i.value), !e || t.length !== e); n = !0); } catch (r) { a = !0, o = r } finally { try { n || null == u.return || u.return() } finally { if (a) throw o } } return t } } function _arrayWithHoles(r) { if (Array.isArray(r)) return r } function createLiveStore(r) { var r = (0, _redux.combineReducers)(r), a = (0, _redux.createStore)(r, {}); return [function () { var r = (t = _slicedToArray((0, _react.useState)(a.getState()), 2))[0], e = t[1], t = a.dispatch, n = null; return (0, _react.useEffect)(function () { return n = a.subscribe(function () { e(a.getState()) }), function () { return n() } }, []), [r, t] }, function () { return [a.getState, a.dispatch] }] }